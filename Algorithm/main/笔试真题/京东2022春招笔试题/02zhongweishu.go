/**
题目描述：
小明有一个长度为 n 的序列，他想从中挑选出一个子序列，使得这个子序列的中位数最大。显然，小明只需要选择原序列中最大的那个数就行，因此他加大难度，给出了一个限制：

原序列中相邻的两个数至少有一个被选到子序列中。

小明想知道在这个限制条件下，子序列最大的中位数是多少？

这里定义中位数是第 n/2 小的数，如 [1, 2, 3, 4, 5] 的中位数是 3，[2, 3, 4, 5, 6, 7] 的中位数是 4。



输入描述
第一行一个正整数 T ，表示数据组数。

对于每一组数据，第一行输入一个正整数 n；第二行输入 n 个正整数 ai, 表示原序列。

2 ≤ n ≤ 3 · 104, 1 ≤ ai ≤ 105, 1 ≤ T ≤ 5。

输出描述
对于每一组数据，输出一行一个正整数，表示能够得到的最大的中位数。


样例输入
3
5
1 2 3 4 5
6
1 2 3 4 5 6
2
7 8
样例输出
4
4
8

提示
样例解释

选择的子序列用下划线表示。

第一组样例，[1, 2, 3, 4, 5]；

第二组样例，[1, 2, 3, 4, 5, 6]；

 第三组样例，[7, 8]。
*/

package main

import "fmt"

func main() {
	var t int
	for ; t != 0; t-- {
		var n int
		nums := []int{}
		for i := 0; i < n; i++ {
			var num int
			fmt.Scan(&num)
			nums = append(nums, num)
		}
		fmt.Println(nums[n/2])
	}

}
