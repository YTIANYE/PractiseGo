/**
下雨
时间限制： 3000MS
内存限制： 589824KB
题目描述：
小团正忙着用机器人收衣服！因为快要下雨了，小团找来了不少机器人帮忙收衣服。他有n件衣服从左到右成一行排列，所在位置分别为1~n，在每个位置上已经有一个就绪的机器人可以帮忙收衣服，但第 i 个位置上的机器人需要pi的电量来启动，然后这个机器人会用ti的时间收衣服，当它收完当前衣服后，会尝试去收紧邻的右边的一件衣服(如果存在的话)，即 i+1处的衣服，如果 i+1 处的衣服已经被其他机器人收了或者其他机器人正在收，这个机器人就会进入休眠状态，不再收衣服。不过如果机器人没有休眠，它会同样以ti时间来收这件 i+1 处的衣服（注意，不是ti+1的时间，收衣服的时间为每个机器人固有属性），然后它会做同样的检测来看能否继续收 i+2 处的衣服，一直直到它进入休眠状态或者右边没有衣服可以收了。形象地来说，机器人会一直尝试往右边收衣服，收k件的话就耗费k*ti的时间，但是当它遇见其他机器人工作的痕迹，就会认为后面的事情它不用管了，开始摸鱼，进入休眠状态。

小团手里总共有电量b，他准备在0时刻的时候将所有他想启动的机器人全部一起启动，过后不再启动新的机器人，并且启动的机器人的电量之和不大于b。他想知道在最佳选择的情况下，最快多久能收完衣服。若无论如何怎样都收不完衣服，输出-1。



输入描述
第一行两个正整数n和b，分别表示衣服数量和小团持有电量。

接下来一行n个数 p1,p2, ...,pn ，含义如题所述，为机器人唤醒需求电量。

接下来一行n个数 t1,t2, ...,tn，含义如题所述，为机器人收衣服所需时间。

数字间两两有空格隔开。

对于所有数据，1≤n≤1000，1≤pi≤100, 1≤ti , b≤105

输出描述
输出最短所需时间。


样例输入
3 5
1 2 3
7 5 3
样例输出
10

提示
样例解释1

可以同时启动第一个机器人和第二个机器人，耗电量为1+2=3，这样花费时间为max(7, 5*2)=10

也可以同时启动第一个机器人和第三个机器人，耗电量为1+3=4，这样花费时间为max(7*2, 3)=14

所以答案为10



输入样例2

3 5

6 2 3

7 5 3

输出样例2

-1

样例解释2

因为必须要启动第一个机器人，耗电量至少为6，但是持有电量只有5，因此无法收完所有衣服，输出-1
 */
package main
